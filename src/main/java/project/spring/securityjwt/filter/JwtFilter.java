package project.spring.securityjwt.filter;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;import org.springframework.security.core.context.SecurityContextHolder;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;import org.springframework.stereotype.Component;import org.springframework.web.filter.OncePerRequestFilter;import project.spring.securityjwt.service.CustomUserDetailsService;import project.spring.securityjwt.util.JwtUtil;import javax.servlet.FilterChain;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;@Componentpublic class JwtFilter extends OncePerRequestFilter {    @Autowired    private JwtUtil jwtUtil;    @Autowired    private CustomUserDetailsService userDetailsService;    @Override    protected void doFilterInternal(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, FilterChain filterChain) throws ServletException, IOException {        String authorization = httpServletRequest.getHeader("Authorization");        String token = null;        String username = null;        if (authorization != null && authorization.startsWith("Bearer ")) {            token = authorization.substring(7);            username = jwtUtil.extractUsername(token);        }        if (username != null && SecurityContextHolder.getContext().getAuthentication() == null) {            UserDetails userDetails = userDetailsService.loadUserByUsername(username);            if (jwtUtil.validateToken(token, userDetails)) {                UsernamePasswordAuthenticationToken auth = new UsernamePasswordAuthenticationToken(                        userDetails, null, userDetails.getAuthorities());                auth.setDetails(new WebAuthenticationDetailsSource().buildDetails(httpServletRequest));                SecurityContextHolder.getContext().setAuthentication(auth);            }        }        filterChain.doFilter(httpServletRequest, httpServletResponse);    }}